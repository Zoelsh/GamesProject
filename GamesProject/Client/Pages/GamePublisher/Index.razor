@page "/GamePublisher"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<div style="background: #ffd89b; /* fallback for old browsers */
     background: -webkit-linear-gradient(to right, #19547b, #ffd89b); /* Chrome 10-25, Safari 5.1-6 */ background: linear-gradient(to right, #19547b, #ffd89b); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */">
    <h1>This is our GamePublisher</h1>


    @if (GamePublishers == null)
    {
        <div class="alert alert-info">Loading GamePublishers...</div> }
    else
    {
        <table class="table table-responsive">
            <thead>
                <tr>
                    <th> Name </th>
                    <th> Actions </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var GamePublisher in GamePublishers)
                {
                    <tr>
                        <td> @GamePublisher.Name </td>
                        <td>
                            <a href="/GamePublishers/view/@GamePublisher.Id" class="btn btn-primary">
                                <span class="oi oi-book"></span>
                            </a>
                            <a href="/GamePublishers/edit/@GamePublisher.Id" class="btn btn-warning">
                                <span class="oi oi-pencil"></span>
                            </a>
                            <button class="btn btn-danger" @onclick="@(()=>Delete(GamePublisher.Id))">
                                <span class="oi oi-delete"></span>
                            </button>
                        </td>
                    </tr>
}
            </tbody>
        </table>}

    @code{
        private List<GamePublisher> GamePublishers;

        protected async override Task OnInitializedAsync()
        {
            GamePublishers = await _client.GetFromJsonAsync<List<GamePublisher>>($"{Endpoints.GamePublishersEndpoint}");
        }

        async Task Delete(int GamePublisherId)
        {
            var GamePublisher = GamePublishers.First(q => q.Id == GamePublisherId);
            var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {GamePublisher.Name}?");
            if (confirm)
            {
                await _client.DeleteAsync($"{Endpoints.GamePublishersEndpoint}/{GamePublisherId}");
                await OnInitializedAsync();
            }
        }
    }
</div>