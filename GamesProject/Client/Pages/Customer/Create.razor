@page "/Customer/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New Customer</h3>
<hr />
<br />

<EditForm Model="@customer" OnValidSubmit="CreateCustomer">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label>CustomerName: </label>
        <div>
            <InputText @bind-Value="customer.Name" class="form-control" />
            <ValidationMessage For="@(()=> customer.Name)" />
        </div>
    </div>

    <div class="form-group">
        <label>Address: </label>
        <div>
            <InputText @bind-Value="customer.Address" class="form-control" />
            <ValidationMessage For="@(()=> customer.Address)" />
        </div>
    </div>

    <div class="form-group">
        <label>ContactNumber: </label>
        <div>
            <InputText @bind-Value="customer.ContactNumber" class="form-control" />
            <ValidationMessage For="@(()=> customer.ContactNumber)" />
        </div>
    </div>

    <div class="form-group">
        <label>EmailAddress: </label>
        <div>
            <InputText @bind-Value="customer.EmailAddress" class="form-control" />
            <ValidationMessage For="@(()=> customer.EmailAddress)" />
        </div>
    </div>

    <div class="form-group">
        <label>Age: </label>
        <div>
            <InputNumber @bind-Value="customer.Age" class="form-control" />
            <ValidationMessage For="@(()=> customer.Age)" />
        </div>
    </div>

    <button type="submit" class="btn btn-success btn-block">
        Create Customer
    </button>

    <div class="form-group">
        <label>Bookings: </label>
        <div>
            <InputSelect @bind-Value="game.BookingId" class="form-control">
                <option value="">-- Select Booking --</option>
                @if (Bookings != null)
                {
                    foreach (var booking in Bookings)
                    {
                        <option value="@booking.Id">@booking.Name</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => Booking.Id)" />
        </div>
    </div>
</EditForm>

@code {

    Customer customer = new Customer();

    private IList<Booking> Bookings;

    protected async override Task OnInitializedAsync()
    {
        Bookings = await _client.GetFromJsonAsync<List<Booking>>($"{Endpoints.BookingsEndpoint}");
    }

    private async Task CreateCustomer()
    {
        await _client.PostAsJsonAsync(Endpoints.CustomersEndpoint, Customer);
        _navManager.NavigateTo("/Customer");
    }

}
